/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.deps = [:]
def versions = [:]

versions.android_gradle_plugin = '3.2.0'
versions.android_apt = '1.8'
versions.android_google_service = '4.3.3'
versions.android_crashlytics = '2.0.0-beta02'
versions.mannodermaus_gralde_plugin = '1.0.32'
versions.junit_gralde_plugin = '1.0.0'

versions.anotations = '1.1.0'
versions.appcompat = '1.1.0'
versions.multidex = '2.0.1'
versions.constraint_layout = '1.1.3'
versions.card_view = '1.0.0'
versions.grid_layout = '1.0.0'
versions.core = '1.2.0'
versions.legacy_support = '1.0.0'
versions.exifinterface = '1.2.0'
versions.material = '1.2.0-alpha05'
versions.kotlin_version = '1.3.61'

/**
 * これは現場のオペレーションの問題により10.2.4と古いもので回していた
 * （課題：GooglePlayの利用を制限されている端末である場合にアップデートでgmsアップデートできず使えなくなる）
 * しかしandroidx対応の中で障害になり, v5.3.3 Feb 2020 から 17.0.0 へ上げている
 * あまりあげない方が良さそうではあるので、あげる場合は現地の端末をみつつ行おう
 */
versions.google_android_gms = '17.0.0'
versions.facebook = '1.5.0'
versions.facebook_logging_interceptor = '3.11.0'
versions.retrofit = '2.7.1'
versions.orma = '6.0.2'
versions.dagger = '2.26'
versions.threetenabp = '1.2.1'
versions.reactivex_android = '2.0.1'
versions.reactivex_java = '2.2.12'
versions.reactivex_kotlin = '2.0.0'
versions.leakcanary = '1.5.1'
versions.assertj = '3.10.0'
versions.mockito = '2.8.47' // update possible
versions.mockk = '1.9'
versions.junit = '1.1.1'
versions.robolectric = '4.0.2' // 4.3.1以上にあげると、API29以上はjava9にせよと怒られる（そしてできない
versions.robolectric_multidex = '3.4.2'
versions.espresso = '3.2.0'
versions.uiautomator = '2.2.0'
versions.rules = '1.3.0-alpha03'
versions.runner = '1.2.0'
versions.orchestrator = '1.2.0'
versions.spek2 = '2.0.9'
versions.junit_runner = '1.4.2'
versions.powermock = '1.6.2'
versions.analytics = '17.2.2'
versions.crashlytics = '17.0.0-beta01'
versions.swipy = '1.2.3@aar'
versions.about_libraries = '5.9.5@aar'
versions.phone_number = '8.8.8'
versions.showcase = '1.3.4@aar'
versions.speed_dial = '3.1.1'
versions.navigation = '2.2.1'
versions.lifecycle = '2.2.0'

ext.versions = versions

def build_versions = [:]
build_versions.min_sdk = 18
build_versions.target_sdk = 29
build_versions.build_tools = "29.0.2"
build_versions.flavor_dimensions = "default"
build_versions.version_code = 66
build_versions.version_name = "5.4.2"
ext.build_versions = build_versions

def deps = [:]
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.android_apt = "com.neenbedankt.gradle.plugins:android-apt:$versions.android_apt"
deps.kotlin_plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin_version"
deps.google_gms_service = "com.google.gms:google-services:$versions.android_google_service"
deps.crashlytics = "com.google.firebase:firebase-crashlytics-gradle:$versions.android_crashlytics"
deps.mannodermaus_gralde_plugin = "de.mannodermaus.gradle.plugins:android-junit5:$versions.mannodermaus_gralde_plugin"
deps.junit_gralde_plugin = "org.junit.platform:junit-platform-gradle-plugin:$versions.junit_gralde_plugin"

def support = [:]
support.annotations = "androidx.annotation:annotation:$versions.annotations"
support.app_compat = "androidx.appcompat:appcompat:$versions.appcompat"
support.multidex = "androidx.multidex:multidex:$versions.multidex"
support.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
support.card_view = "androidx.cardview:cardview:$versions.card_view"
support.grid_layout = "androidx.gridlayout:gridlayout:$versions.grid_layout"
support.core = "androidx.core:core:$versions.core"
support.legacy_support = "androidx.legacy:legacy-support-v4:$versions.legacy_support"
support.exifinterface = "androidx.exifinterface:exifinterface:$versions.exifinterface"
support.material = "com.google.android.material:material:$versions.material"
support.play_service_maps = "com.google.android.gms:play-services-maps:$versions.google_android_gms"
support.play_service_location = "com.google.android.gms:play-services-location:$versions.google_android_gms"
deps.support = support

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin_version"
kotlin.reflect = "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin_version"
deps.kotlin = kotlin

def data_binding = [:]
data_binding.compiler = "androidx.databinding:databinding-compiler:$versions.android_gradle_plugin"
deps.data_binding = data_binding

def facebook = [:]
facebook.stetho = "com.facebook.stetho:stetho:$versions.facebook"
facebook.stetho_okhttp = "com.facebook.stetho:stetho-okhttp3:$versions.facebook"
facebook.stetho_urlconnection = "com.facebook.stetho:stetho-urlconnection:$versions.facebook"
facebook.logging_interceptor = "com.squareup.okhttp3:logging-interceptor:$versions.facebook_logging_interceptor"
deps.facebook = facebook

def retrofit = [:]
retrofit.retrofit = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
deps.retrofit = retrofit

def orma = [:]
orma.orma = "com.github.maskarade.android.orma:orma:$versions.orma"
orma.processor = "com.github.maskarade.android.orma:orma-processor:$versions.orma"
deps.orma = orma

def dagger = [:]
dagger.dagger = "com.google.dagger:dagger:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
deps.dagger = dagger

def reactivex = [:]
reactivex.android = "io.reactivex.rxjava2:rxandroid:$versions.reactivex_android"
reactivex.java = "io.reactivex.rxjava2:rxjava:$versions.reactivex_java"
reactivex.kotlin = "io.reactivex.rxjava2:rxkotlin:$versions.reactivex_kotlin"
deps.reactivex = reactivex

def leakcanary = [:]
leakcanary.active = "com.squareup.leakcanary:leakcanary-android:$versions.leakcanary"
leakcanary.inactive = "com.squareup.leakcanary:leakcanary-android-no-op:$versions.leakcanary"
deps.leakcanary = leakcanary

def test = [:]
test.assertj = "org.assertj:assertj-core:$versions.assertj"
test.mockito = "org.mockito:mockito-core:$versions.mockito"
test.mockk = "io.mockk:mockk:$versions.mockk"
test.threetenbp = "org.threeten:threetenbp:$versions.threetenabp"
test.junit = "androidx.test.ext:junit:$versions.junit"
test.robolectric = "org.robolectric:robolectric:$versions.robolectric"
test.robolectric_multidex = "org.robolectric:multidex:$versions.robolectric_multidex"
test.rules = "androidx.test:rules:$versions.rules"
test.runner = "androidx.test:runner:$versions.runner"
test.orchestrator = "androidx.test:orchestrator:$versions.runner"
test.kotlin = "org.jetbrains.kotlin:kotlin-test:$versions.kotlin_version"
test.spek_dsl = "org.spekframework.spek2:spek-dsl-jvm:$versions.spek2"
test.spek_runner = "org.spekframework.spek2:spek-runner-junit5:$versions.spek2"
test.junit_runner = "org.junit.platform:junit-platform-runner:$versions.junit_runner"
test.junit_runner = "org.junit.platform:junit-platform-runner:$versions.junit_runner"
test.powermock_junit4 = "org.powermock:powermock-module-junit4:$versions.powermock"
test.powermock_mockito = "org.powermock:powermock-api-mockito:$versions.powermock"
deps.test = test

def androidTest = [:]
androidTest.espresso_core = "androidx.test.espresso:espresso-core:$versions.espresso"
androidTest.espresso_contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
androidTest.espresso_idling_resource = "androidx.test.espresso:espresso-idling-resource:$versions.espresso"
androidTest.uiautomator = "androidx.test.uiautomator:uiautomator:$versions.uiautomator"
deps.androidTest = androidTest

def firebase = [:]
firebase.analytics = "com.google.firebase:firebase-analytics:$versions.analytics"
firebase.crashlytics = "com.google.firebase:firebase-crashlytics:$versions.crashlytics"
firebase.core = "com.google.firebase:firebase-core:$versions.google_android_gms"
deps.firebase = firebase

def util = [:]
util.swipy = "com.github.orangegangsters:swipy:$versions.swipy"
util.about_libraries = "com.mikepenz:aboutlibraries:$versions.about_libraries"
util.phone_number = "com.googlecode.libphonenumber:libphonenumber:$versions.phone_number"
util.showcase = "com.github.deano2390:MaterialShowcaseView:$versions.showcase"
util.speed_dial = "com.leinardi.android:speed-dial:$versions.speed_dial"
util.threetenabp = "com.jakewharton.threetenabp:threetenabp:$versions.threetenabp"
deps.util = util

def jetpack = [:]
jetpack.navigation_fragment = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
jetpack.navigation_ui = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
jetpack.lifecycle_extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
jetpack.lifecycle_viewmodel = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
jetpack.lifecycle_common = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
deps.jetpack = jetpack

ext.deps = deps

def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.maven { url "https://jitpack.io" }
    handler.maven { url "https://clojars.org/repo/" }
    handler.maven {
        url 'https://maven.google.com/'
        name 'Google'
    }
    handler.maven { url "http://dl.bintray.com/jetbrains/spek" }
}
ext.addRepos = this.&addRepos
